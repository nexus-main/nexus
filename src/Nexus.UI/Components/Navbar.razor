@inject AppState AppState;
@inject INexusClient Client;
@inject NavigationManager NavigationManager

@using System.Security.Claims

<div class="z-0 w-full py-3 pr-3 flex justify-between items-center text-slate-500 bg-gray-200 shadow-md">

    <a href="">
        <img class="ml-6 w-16 sm:w-28" src="text.svg" />
    </a>

    <div class="flex items-center">
        <ErrorsView />
        @if (!AppState.IsDemo)
        {
            <MudTooltip Text="API">
                <MudIconButton
                    Href="api"
                    Target="_blank"
                    Icon="@Icons.Material.Filled.Api" />
            </MudTooltip>

            @if (_authenticationState is not null)
            {
                <MudTooltip Text="Settings">

                    @if (NavigationManager.ToBaseRelativePath(NavigationManager.Uri) == "settings")
                    {
                        <MudIconButton
                            Color="Color.Secondary"
                            Href="/"
                            Icon="@Icons.Material.Filled.Settings" />
                    }

                    else
                    {
                        <MudIconButton 
                            Href="settings"
                            Icon="@Icons.Material.Filled.Settings" />
                    }

                </MudTooltip>

                <UserSettingsView />
            }
        }
        @if (_helpLink is not null)
        {
            <a href="@_helpLink" target="_blank" class="w-9 h-9 mdi mdi-help flex justify-center items-center rounded-full text-cyan-600 border bg-gray-300 hover:text-orange-500"></a>
        }

        <span class="mx-3 w-9 h-9 flex justify-center items-center text-2xl mdi mdi-menu xl:hidden cursor-pointer hover:text-orange-500"
            @onclick="OpenHamburgerMenu">
        </span>
    </div>
</div>

@code {

    private AuthenticationState _authenticationState = default!;
    private string? _helpLink;

    [CascadingParameter]
    public Task<AuthenticationState> GetAuthenticationStateTask { get; set; } = default!;

    [Parameter]
    public Action OpenHamburgerMenu { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        _authenticationState = await GetAuthenticationStateTask;
        _helpLink = await Client.V1.System.GetHelpLinkAsync();
    }

    private bool IsAdmin(ClaimsPrincipal user)
    {
        return user
            .IsInRole("Administrator");
    }
}